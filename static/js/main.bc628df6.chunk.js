(this.webpackJsonpreactalgo=this.webpackJsonpreactalgo||[]).push([[0],{12:function(e,t,n){e.exports=n(22)},17:function(e,t,n){},19:function(e,t,n){},22:function(e,t,n){"use strict";n.r(t);var r=n(0),a=n.n(r),i=n(6),o=n.n(i),s=(n(17),n(3)),c=n(4),l=n(10),u=n(7),h=n(11),d=n(8),f=n.n(d),v=n(9),p=n.n(v);var m=function(){return a.a.createElement("header",{class:"sans-serif"},a.a.createElement("div",{class:"cover bg-left bg-center-l"},a.a.createElement("div",{class:" pb5 pb6-m pb5-l"},a.a.createElement("nav",{class:"dt w-100 mw8 center"},a.a.createElement("div",{class:"dtc v-mid tr pa3"})),a.a.createElement("div",{class:"dtc w2 v-mid pa3"}),a.a.createElement("div",{class:"tc-l mt4 mt5-m mt6-l ph3"},a.a.createElement("h1",{class:"f1 f1-l fw3 black mb0 lh-title"},"Algorithm Visualization"),a.a.createElement("h2",{class:"fw1 f3 black mt3 mb2"},"Showcasing algorithms by animating their work. Choose one and get started!")))))};var b=function(e){var t=e.onAlgoChange;return a.a.createElement("div",null,a.a.createElement("div",{class:"mw9 center ph3-ns"},a.a.createElement("div",{class:"cf ph2-ns"},a.a.createElement("div",{class:"fl w-100 w-third-ns "},a.a.createElement("h1",{className:"f4 bold center mw5"},"Sorting"),a.a.createElement("ul",{className:"list pl0 ml0 center mw5 ba b--light-silver br3"},a.a.createElement("li",{onClick:function(){return t("bubble")},className:"ph3 pv2 bb b--light-silver pointer hover-white "},"BubbleSort"),a.a.createElement("li",{onClick:function(){return t("selection")},className:"ph3 pv2 bb b--light-silver pointer hover-white "},"SelectionSort"),a.a.createElement("li",{onClick:function(){return t("quick")},className:"ph3 pv2 bb b--light-silver pointer hover-white "},"QuickSort"))),a.a.createElement("div",{class:"fl w-100 w-third-ns"},a.a.createElement("h1",{className:"f4 bold center mw5"},"Searching"),a.a.createElement("ul",{className:"list pl0 ml0 center mw5 ba b--light-silver br3"},a.a.createElement("li",{onClick:function(){return t("bfs")},className:"ph3 pv2 bb b--light-silver pointer hover-white "},"Breadth First Search"),a.a.createElement("li",{onClick:function(){return t("dfs")},className:"ph3 pv2 bb b--light-silver pointer hover-white "},"Depth First Search"),a.a.createElement("li",{onClick:function(){return t("astar")},className:"ph3 pv2 bb b--light-silver pointer hover-white "},"A* Search"))),a.a.createElement("div",{class:"fl w-100 w-third-ns "},a.a.createElement("h1",{className:"f4 bold center mw5"},"Other"),a.a.createElement("ul",{className:"list pl0 ml0 center mw5 ba b--light-silver br3"},a.a.createElement("li",{onClick:function(){return t("maze")},className:"ph3 pv2 bb b--light-silver pointer hover-white "},"Maze Generation"),a.a.createElement("li",{onClick:function(){return t("ray2d")},className:"ph3 pv2 bb b--light-silver pointer hover-white "},"2D Ray Casting"),a.a.createElement("li",{onClick:function(){return t("quadtree")},className:"ph3 pv2 bb b--light-silver pointer hover-white "},"Quad Tree"))))))};var g=function(e){var t=e.onAlgoChange,n=e.title,r=e.description;return a.a.createElement("header",{className:"sans-serif"},a.a.createElement("div",{className:"cover bg-left bg-center-l"},a.a.createElement("div",{className:" pb5 pb6-m pb5-l"},a.a.createElement("nav",{className:"dt w-100 mw8 center"},a.a.createElement("div",{className:"dtc v-mid tr pa3"})),a.a.createElement("div",{className:"dtc w2 v-mid pa3"}),a.a.createElement("div",{className:"tc-l mt4 mt5-m mt6-l ph3"},a.a.createElement("h1",{className:"f1 f1-l fw3 black mb0 lh-title"},n),a.a.createElement("div",{className:"flex justify-center marg"},a.a.createElement("h2",{class:"fw1 f3 black mt3 mb2 lh-copy"},r)),a.a.createElement("div",{className:"flex justify-center"},a.a.createElement("ul",{className:"list pl0 ml0 mw5 ba b--light-silver br3"},a.a.createElement("li",{onClick:function(){return t("none")},className:"ph4 pv3 bb b--light-silver pointer hover-white "},"Home")))))))},w=(n(19),n(1)),y=n.n(w);var k=n(2),x=n.n(k);var S={particles:{number:{value:50,density:{enable:!0,value_area:800},line_linked:{shadow:{enable:!0,color:"#3CA9D1",blur:5}}}}},j=[{name:"bubble",title:"Bubble Sort",description:"Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in the wrong order. It requires an O(n*n) time complexity on average while also requiring a large number of memory operations (swaps). Bubble sort is considered the simplest and most inefficient sorting algorithm",algorithm:function(e){var t,n=[2],r=[60];function a(e,t,n){var r;return y.a.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,y.a.awrap(i(25));case 2:r=e[t],e[t]=e[n],e[n]=r;case 5:case"end":return a.stop()}}))}e.setup=function(){e.createCanvas(600,400);for(var i=0;i<60;i++)r[i]=400*Math.random();!function(){var e,i;y.a.async((function(o){for(;;)switch(o.prev=o.next){case 0:t=r.length-1;case 1:e=!1,i=0;case 3:if(!(i<t)){o.next=13;break}if(!(r[i]>r[i+1])){o.next=10;break}return o.next=7,y.a.awrap(a(r,i,i+1));case 7:n[0]=i,n[1]=i+1,e=!0;case 10:i++,o.next=3;break;case 13:t-=1;case 14:if(e){o.next=1;break}case 15:case"end":return o.stop()}}))}()},e.draw=function(){e.background(100);for(var a=0;a<r.length;a++)a>t?e.fill(255,0,0):e.fill(255),a!==n[0]&&a!==n[1]||e.fill(0,255,0),e.rect(10*a,400,10,-r[a])};var i=function(e){return new Promise((function(t){return setTimeout(t,e)}))}}},{name:"selection",title:"Selection Sort",description:"The selection sort algorithm sorts an array by repeatedly finding the minimum element from unsorted part and putting it at the beginning. While having the same time complexity as Bubble Sort O(n*n) it is a superior algorithm due to the decrease of swaps occuring in the list.",algorithm:function(e){var t,n,r,a=[60];e.setup=function(){e.createCanvas(600,400);for(var s=0;s<60;s++)a[s]=400*Math.random();!function(){var e,s;y.a.async((function(c){for(;;)switch(c.prev=c.next){case 0:e=0;case 1:if(!(e<a.length)){c.next=18;break}n=e,s=t=e;case 5:if(!(s<a.length)){c.next=13;break}return r=s,a[n]>a[s]&&(n=s),c.next=10,y.a.awrap(o(25));case 10:s++,c.next=5;break;case 13:return c.next=15,y.a.awrap(i(a,n,t));case 15:e++,c.next=1;break;case 18:case"end":return c.stop()}}))}()},e.draw=function(){e.background(100);for(var i=0;i<a.length;i++)i<t?e.fill(255,0,0):e.fill(255),i===n&&e.fill(255,165,0),i===r&&e.fill(0,255,0),e.rect(10*i,400,10,-a[i])};var i=function(e,t,n){var r=e[t];e[t]=e[n],e[n]=r},o=function(e){return new Promise((function(t){return setTimeout(t,e)}))}}},{name:"quick",title:"Quick Sort",description:"QuickSort is a Divide and Conquer algorithm. It picks an element as pivot and partitions the given array around the picked pivot. The key process in quickSort is partition(). Target of partitions is, given an array and an element x of array as pivot, put x at its correct position in sorted array and put all smaller elements before it, and put all greater elements after it.",algorithm:function(e){var t=[60],n=[];function r(e,t,r){var i,o,s,c,l;return y.a.async((function(u){for(;;)switch(u.prev=u.next){case 0:for(i=t;i<=r;i++)0!=n[i]&&(n[i]=1);o=t,s=e[r],n[o]=0,c=t;case 5:if(!(c<r)){u.next=15;break}if(!(e[c]<s)){u.next=12;break}return u.next=9,y.a.awrap(a(e,c,o));case 9:n[o]=-1,o++,n[o]=0;case 12:c++,u.next=5;break;case 15:return u.next=17,y.a.awrap(a(e,o,r));case 17:for(l=t;l<=r;l++)0!=n[l]&&(n[l]=-1);return u.abrupt("return",o);case 19:case"end":return u.stop()}}))}function a(e,t,n){var r;return y.a.async((function(a){for(;;)switch(a.prev=a.next){case 0:return a.next=2,y.a.awrap(i(25));case 2:r=e[t],e[t]=e[n],e[n]=r;case 5:case"end":return a.stop()}}))}e.setup=function(){e.createCanvas(600,400);for(var a=0;a<60;a++)t[a]=400*Math.random(),n[a]=-1;!function e(t,a,i){var o;return y.a.async((function(s){for(;;)switch(s.prev=s.next){case 0:if(!(a>=i)){s.next=2;break}return s.abrupt("return");case 2:return s.next=4,y.a.awrap(r(t,a,i));case 4:return o=s.sent,n[o]=-1,s.next=8,y.a.awrap(Promise.all([e(t,a,o-1),e(t,o+1,i)]));case 8:case"end":return s.stop()}}))}(t,0,t.length-1)},e.draw=function(){e.background(100);for(var r=0;r<t.length;r++)0===n[r]?e.fill(255,0,0):1===n[r]?e.fill(0,0,255):e.fill(255),e.rect(10*r,400,10,-t[r])};var i=function(e){return new Promise((function(t){return setTimeout(t,e)}))}}},{name:"bfs",title:"Breadth First Search",description:"This algorithm is used to examine nodes looking for a correct answer or a goal node. The approach is based on a queue data structure. Upon visiting a new square all other squares are added to the back of the queue, while the next examined square is taken from the start of the queue. It is optimal for finding the shortest path, howerver high memory use.",algorithm:function(e){var t,n,r=20,a=20,i=new Array(r);function o(o,s){var c=this;this.i=o,this.j=s,this.connectedSqures=[],this.blocked=!1,this.visited=!1,this.inQ=!1,this.found=!1,this.show=function(){c.blocked?e.fill(0):c.found?e.fill(138,43,226):c.inQ&&!c.visited?e.fill(124,252,0):c.visited?e.fill(255,99,71):e.fill(255),e.noStroke(),e.ellipse(c.i*t+t/2,c.j*n+n/2,t/1.5,n/1.5)},this.addConnections=function(){c.i<r-1&&c.connectedSqures.push(i[c.i+1][c.j]),c.i>0&&c.connectedSqures.push(i[c.i-1][c.j]),c.j>0&&c.connectedSqures.push(i[c.i][c.j-1]),c.j<a-1&&c.connectedSqures.push(i[c.i][c.j+1]),c.i<r-1&&c.j<a-1&&c.connectedSqures.push(i[c.i+1][c.j+1]),c.i>0&&c.j<a-1&&c.connectedSqures.push(i[c.i-1][c.j+1]),c.i<r-1&&c.j>0&&c.connectedSqures.push(i[c.i+1][c.j-1]),c.i>0&&c.j>0&&c.connectedSqures.push(i[c.i-1][c.j-1])}}function s(e,t,n){var r=Math.floor((t+n)/2);return r===e&&(Math.random()>.5?r++:r-=1),r}e.setup=function(){e.createCanvas(600,400),t=600/r,n=400/a;for(var l=0;l<r;l++)i[l]=new Array(a);for(var u=0;u<r;u++)for(var h=0;h<a;h++)i[u][h]=new o(u,h);for(var d=0;d<r;d++)for(var f=0;f<a;f++)i[d][f].addConnections();!function e(t,n,r,a,o,c){if(o&&a-n>3){for(var l=s(c,n,a),u=t;u<r;u++)i[u][l].blocked=!0;var h=Math.floor(t+Math.random()*(r-t-1));i[h][l].blocked=!1,e(t,n,r,l,!o,h),e(t,l,r,a,!o,h)}else if(!o&&r-t>3){var d=s(c,t,r);d===c&&d++;for(var f=n;f<a;f++)i[d][f].blocked=!0;var v=Math.floor(n+Math.random()*(a-n-1));i[d][v].blocked=!1,e(t,n,d,a,!o,v),e(d,n,r,a,!o,v)}}(0,0,r,a,!0,0),function(){var e,t,n,o;y.a.async((function(s){for(;;)switch(s.prev=s.next){case 0:(e=[]).push(i[0][0]),i[0][0].inQ=!0;case 3:if(0===e.length){s.next=26;break}t=0;case 5:if(!(t<e.length)){s.next=24;break}if((n=e.shift()).visited=!0,n!==i[r-1][a-1]){s.next=12;break}return n.found=!0,s.abrupt("return");case 12:o=0;case 13:if(!(o<n.connectedSqures.length)){s.next=21;break}if(!n.connectedSqures[o]){s.next=18;break}return s.next=17,y.a.awrap(c(50));case 17:n.connectedSqures[o].visited||n.connectedSqures[o].inQ||n.connectedSqures[o].blocked||(e.push(n.connectedSqures[o]),n.connectedSqures[o].inQ=!0);case 18:o++,s.next=13;break;case 21:t++,s.next=5;break;case 24:s.next=3;break;case 26:return s.abrupt("return");case 27:case"end":return s.stop()}}))}()},e.draw=function(){e.background(255);for(var t=0;t<r;t++)for(var n=0;n<a;n++)i[t][n].show()};var c=function(e){return new Promise((function(t){return setTimeout(t,e)}))}}},{name:"maze",title:"Maze Generation ",description:"This algorithm is based on recursive division. It divides the scope of the field into two sections and chooses a random wall to create a passage. It continues to divide the filed until division is no longer possible creating a maze. Used in the search algorithms",algorithm:function(e){var t,n,r=20,a=20,i=new Array(r);function o(o,s){var c=this;this.i=o,this.j=s,this.connectedSqures=[],this.blocked=!1,this.visited=!1,this.inQ=!1,this.found=!1,this.show=function(){c.blocked?e.fill(0):c.found?e.fill(0,255,0):c.inQ&&!c.visited?e.fill(0,0,255):c.visited?e.fill(255,0,0):e.fill(255),e.noStroke(),e.ellipse(c.i*t+t/2,c.j*n+n/2,t,n)},this.addConnections=function(){c.i<r-1&&c.connectedSqures.push(i[c.i+1][c.j]),c.i>0&&c.connectedSqures.push(i[c.i-1][c.j]),c.j>0&&c.connectedSqures.push(i[c.i][c.j-1]),c.j<a-1&&c.connectedSqures.push(i[c.i][c.j+1])}}function s(e,t,n){var r=Math.floor((t+n)/2);return r===e&&(Math.random()>.5?r++:r-=1),r}e.setup=function(){e.createCanvas(600,400),t=600/r,n=400/a;for(var l=0;l<r;l++)i[l]=new Array(a);for(var u=0;u<r;u++)for(var h=0;h<a;h++)i[u][h]=new o(u,h);for(var d=0;d<r;d++)for(var f=0;f<a;f++)i[d][f].addConnections();!function e(t,n,r,a,o,l){var u,h,d,f,v,p;return y.a.async((function(m){for(;;)switch(m.prev=m.next){case 0:if(!(o&&a-n>3)){m.next=11;break}for(u=s(l,n,a),h=t;h<r;h++)i[h][u].blocked=!0;return d=Math.floor(t+Math.random()*(r-t-1)),i[d][u].blocked=!1,m.next=7,y.a.awrap(c(1e3));case 7:return m.next=9,y.a.awrap(Promise.all([e(t,n,r,u,!o,d),e(t,u,r,a,!o,d)]));case 9:m.next=21;break;case 11:if(o||!(r-t>3)){m.next=21;break}for((f=s(l,t,r))===l&&f++,v=n;v<a;v++)i[f][v].blocked=!0;return p=Math.floor(n+Math.random()*(a-n-1)),i[f][p].blocked=!1,m.next=19,y.a.awrap(c(1e3));case 19:return m.next=21,y.a.awrap(Promise.all([e(t,n,f,a,!o,p),e(f,n,r,a,!o,p)]));case 21:case"end":return m.stop()}}))}(0,0,r,a,!0,0)},e.draw=function(){e.background(255);for(var t=0;t<r;t++)for(var n=0;n<a;n++)i[t][n].show()};var c=function(e){return new Promise((function(t){return setTimeout(t,e)}))}}},{name:"dfs",title:"Depth First Search ",description:"Similar to Breadth First it implements a data structure in order to do the traversal. The data structure used is a stack. Upon visiting a square all others are added to the stack, however the next examined square is taken from the back of the stack. While more efficient in memory use does not lead to optimal solutions.",algorithm:function(e){var t,n,r=20,a=20,i=new Array(r);function o(o,s){var c=this;this.i=o,this.j=s,this.connectedSqures=[],this.blocked=!1,this.visited=!1,this.inQ=!1,this.found=!1,this.show=function(){c.blocked?e.fill(0):c.found?e.fill(138,43,226):c.inQ&&!c.visited?e.fill(124,252,0):c.visited?e.fill(255,99,71):e.fill(255),e.noStroke(),e.ellipse(c.i*t+t/2,c.j*n+n/2,t/1.5,n/1.5)},this.addConnections=function(){c.i<r-1&&c.connectedSqures.push(i[c.i+1][c.j]),c.i>0&&c.connectedSqures.push(i[c.i-1][c.j]),c.j>0&&c.connectedSqures.push(i[c.i][c.j-1]),c.j<a-1&&c.connectedSqures.push(i[c.i][c.j+1]),c.i<r-1&&c.j<a-1&&c.connectedSqures.push(i[c.i+1][c.j+1]),c.i>0&&c.j<a-1&&c.connectedSqures.push(i[c.i-1][c.j+1]),c.i<r-1&&c.j>0&&c.connectedSqures.push(i[c.i+1][c.j-1]),c.i>0&&c.j>0&&c.connectedSqures.push(i[c.i-1][c.j-1])}}function s(e,t,n){var r=Math.floor((t+n)/2);return r===e&&(Math.random()>.5?r++:r-=1),r}e.setup=function(){e.createCanvas(600,400),t=600/r,n=400/a;for(var l=0;l<r;l++)i[l]=new Array(a);for(var u=0;u<r;u++)for(var h=0;h<a;h++)i[u][h]=new o(u,h);for(var d=0;d<r;d++)for(var f=0;f<a;f++)i[d][f].addConnections();!function e(t,n,r,a,o,c){if(o&&a-n>3){for(var l=s(c,n,a),u=t;u<r;u++)i[u][l].blocked=!0;var h=Math.floor(t+Math.random()*(r-t-1));i[h][l].blocked=!1,e(t,n,r,l,!o,h),e(t,l,r,a,!o,h)}else if(!o&&r-t>3){var d=s(c,t,r);d===c&&d++;for(var f=n;f<a;f++)i[d][f].blocked=!0;var v=Math.floor(n+Math.random()*(a-n-1));i[d][v].blocked=!1,e(t,n,d,a,!o,v),e(d,n,r,a,!o,v)}}(0,0,r,a,!0,0),function(){var e,t,n,o;y.a.async((function(s){for(;;)switch(s.prev=s.next){case 0:(e=[]).push(i[0][0]),i[0][0].inQ=!0;case 3:if(0===e.length){s.next=26;break}t=0;case 5:if(!(t<e.length)){s.next=24;break}if((n=e.pop()).visited=!0,n!==i[r-1][a-1]){s.next=12;break}return n.found=!0,s.abrupt("return");case 12:o=0;case 13:if(!(o<n.connectedSqures.length)){s.next=21;break}if(!n.connectedSqures[o]){s.next=18;break}return s.next=17,y.a.awrap(c(50));case 17:n.connectedSqures[o].visited||n.connectedSqures[o].inQ||n.connectedSqures[o].blocked||(e.push(n.connectedSqures[o]),n.connectedSqures[o].inQ=!0);case 18:o++,s.next=13;break;case 21:t++,s.next=5;break;case 24:s.next=3;break;case 26:return s.abrupt("return");case 27:case"end":return s.stop()}}))}()},e.draw=function(){e.background(255);for(var t=0;t<r;t++)for(var n=0;n<a;n++)i[t][n].show()};var c=function(e){return new Promise((function(t){return setTimeout(t,e)}))}}},{name:"astar",title:"A* Search ",description:"The A* algorithm is a more optimal traversal approach due to the use of a heuristic or an educated guess as to the goal node. The cost of travelling to each node is evaluated in comparison to how close it is to the node, allowing only potential optimal solutions to be examined.",algorithm:function(e){var t,n,r=30,a=30,i=new Array(r);function o(o,s){var c=this;this.f=0,this.h=0,this.g=0,this.i=o,this.j=s,this.connectedSqures=[],this.previous=void 0,this.blocked=!1,this.visited=!1,this.inQ=!1,this.found=!1,this.goal=!1,this.show=function(){c.blocked?e.fill(0):c.goal?e.fill(30,144,255):c.found?e.fill(138,43,226):c.inQ&&!c.visited?e.fill(124,252,0):c.visited?e.fill(255,99,71):e.fill(255),e.noStroke(),e.ellipse(c.i*t+t/2,c.j*n+n/2,t/1.5,n/1.5)},this.addConnections=function(){c.i<r-1&&c.connectedSqures.push(i[c.i+1][c.j]),c.i>0&&c.connectedSqures.push(i[c.i-1][c.j]),c.j>0&&c.connectedSqures.push(i[c.i][c.j-1]),c.j<a-1&&c.connectedSqures.push(i[c.i][c.j+1]),c.i<r-1&&c.j<a-1&&c.connectedSqures.push(i[c.i+1][c.j+1]),c.i>0&&c.j<a-1&&c.connectedSqures.push(i[c.i-1][c.j+1]),c.i<r-1&&c.j>0&&c.connectedSqures.push(i[c.i+1][c.j-1]),c.i>0&&c.j>0&&c.connectedSqures.push(i[c.i-1][c.j-1])}}function s(t,n){return e.dist(t.i,t.j,n.i,n.j)}function c(e,t){for(var n=e.length-1;n>=0;n--)e[n]==t&&e.splice(n,1)}function l(e,t,n){var r=Math.floor((t+n)/2);return r===e&&(Math.random()>.5?r++:r-=1),r}e.setup=function(){e.createCanvas(600,400),t=600/r,n=400/a;for(var h=0;h<r;h++)i[h]=new Array(a);for(var d=0;d<r;d++)for(var f=0;f<a;f++)i[d][f]=new o(d,f);for(var v=0;v<r;v++)for(var p=0;p<a;p++)i[v][p].addConnections();i[r-1][a-1].goal=!0,function e(t,n,r,a,o,s){if(o&&a-n>3){for(var c=l(s,n,a),u=t;u<r;u++)i[u][c].blocked=!0;var h=Math.floor(t+Math.random()*(r-t-1));i[h][c].blocked=!1,e(t,n,r,c,!o,h),e(t,c,r,a,!o,h)}else if(!o&&r-t>3){var d=l(s,t,r);d===s&&d++;for(var f=n;f<a;f++)i[d][f].blocked=!0;var v=Math.floor(n+Math.random()*(a-n-1));i[d][v].blocked=!1,e(t,n,d,a,!o,v),e(d,n,r,a,!o,v)}}(0,0,r,a,!0,0),function(){var e,t,n,o,l,h,d,f,v,p,m;y.a.async((function(b){for(;;)switch(b.prev=b.next){case 0:t=[],(e=[]).push(i[0][0]),i[0][0].inQ=!0;case 4:if(!(e.length>0)){b.next=23;break}for(n=0,o=0;o<e.length;o++)e[o].f<e[n].f&&(n=o);return b.next=9,y.a.awrap(u(10));case 9:if(l=e[n],!e[n].goal){b.next=16;break}for((h=[]).push(d=l);d.previous;)h.push(d.previous),(d=d.previous).goal=!0;return b.abrupt("return");case 16:for(t.push(l),l.visited=!0,c(e,l),f=l.connectedSqures,v=0;v<f.length;v++)f[v].blocked||(p=f[v],t.includes(p)||(m=l.g+1,e.includes(p)?m<p.g&&(p.g=m):(p.g=m,e.push(p),p.inQ=!0,p.previous=l)),p.h=s(p,i[r-1][a-1]),p.f=p.g+p.h);b.next=4;break;case 23:return b.abrupt("return");case 24:case"end":return b.stop()}}))}()},e.draw=function(){e.background(255);for(var t=0;t<r;t++)for(var n=0;n<a;n++)i[t][n].show()};var u=function(e){return new Promise((function(t){return setTimeout(t,e)}))}}},{name:"ray2d",title:"2D Ray Casting",description:"Ray Casting is an approach to detect intersections between objects using by casting rays. Using a large amount of rays allows the ray intersection to draw rectangles to represent the distance to the object creating the illusion of 3D. USAGE: Use the mouse to move the raycaster, Q and E to change direction.",algorithm:function(e){var t,n=400,r=400,a=function(){function t(n,r,a,i){Object(s.a)(this,t),this.a=e.createVector(n,r),this.b=e.createVector(a,i)}return Object(c.a)(t,[{key:"show",value:function(){e.stroke(255),e.line(this.a.x,this.a.y,this.b.x,this.b.y)}}]),t}(),i=function(){function t(e,n){Object(s.a)(this,t),this.pos=e,this.dir=x.a.Vector.fromAngle(n)}return Object(c.a)(t,[{key:"show",value:function(){e.stroke(255),e.push(),e.translate(this.pos.x,this.pos.y),e.line(0,0,10*this.dir.x,10*this.dir.y),e.pop()}},{key:"setAngle",value:function(e){this.dir=x.a.Vector.fromAngle(e)}},{key:"lookAt",value:function(e,t){this.dir.x=e-this.pos.x,this.dir.y=t-this.pos.y,this.dir.normalize()}},{key:"cast",value:function(t){var n=t.a.x,r=t.a.y,a=t.b.x,i=t.b.y,o=this.pos.x,s=this.pos.y,c=this.pos.x+this.dir.x,l=this.pos.y+this.dir.y,u=(n-a)*(s-l)-(r-i)*(o-c);if(0!==u){var h=((n-o)*(s-l)-(r-s)*(o-c))/u;if(h>0&&h<1&&-((n-a)*(r-s)-(r-i)*(n-o))/u>0){var d=e.createVector();return d.x=n+h*(a-n),d.y=r+h*(i-r),d}}}}]),t}(),o=function(){function t(){Object(s.a)(this,t),this.pos=e.createVector(r/2,n/2),this.rays=[],this.heading=0,this.previousPos=e.createVector(r/2,n/2);for(var a=-40;a<40;a++)this.rays.push(new i(this.pos,e.radians(a)))}return Object(c.a)(t,[{key:"rotate",value:function(t){this.heading+=t;for(var n=0;n<this.rays.length;n++)this.rays[n].setAngle(e.radians(n)+this.heading)}},{key:"show",value:function(){e.fill(255),e.ellipse(this.pos.x,this.pos.y,4);for(var t=0;t<this.rays.length;t++)this.rays[t].show()}},{key:"look",value:function(t){for(var n=[],r=0;r<this.rays.length;r++){var a=this.rays[r],i=null,o=1/0,s=!0,c=!1,l=void 0;try{for(var u,h=t[Symbol.iterator]();!(s=(u=h.next()).done);s=!0){var d=u.value,f=a.cast(d);if(f){var v=x.a.Vector.dist(this.pos,f),p=a.dir.heading()-this.heading;(v*=e.cos(p))<o&&(o=v,i=f)}}}catch(m){c=!0,l=m}finally{try{s||null==h.return||h.return()}finally{if(c)throw l}}i&&(e.stroke(255,100),e.line(this.pos.x,this.pos.y,i.x,i.y)),n[r]=o}return n}},{key:"update",value:function(e,t){this.pos.set(e,t)}}]),t}(),l=[],u=[];e.setup=function(){e.createCanvas(2*r,n),l.push(new a(0,0,r,0)),l.push(new a(0,n,r,n)),l.push(new a(0,0,0,n)),l.push(new a(r,0,r,n));for(var i=0;i<5;i++){var s=e.random(r),c=e.random(n),u=e.random(r),h=e.random(n);l.push(new a(s,c,u,h))}t=new o},e.draw=function(){e.background(0);var a=!0,i=!1,o=void 0;try{for(var s,c=l[Symbol.iterator]();!(a=(s=c.next()).done);a=!0){s.value.show()}}catch(b){i=!0,o=b}finally{try{a||null==c.return||c.return()}finally{if(i)throw o}}u=t.look(l),t.show(),t.update(e.mouseX,e.mouseY),e.keyIsDown(81)&&t.rotate(-.05),e.keyIsDown(69)&&t.rotate(.05);var h=r/u.length;e.push(),e.translate(r,0);for(var d=0;d<u.length;d++){var f=u[d]*u[d],v=r*r,p=e.map(f,0,v,255,0),m=e.map(f,0,v,n,0);e.noStroke(),e.fill(p),e.rectMode(e.CENTER),e.rect(d*h+h/2,n/2,h,m)}e.pop()}}},{name:"quadtree",title:"Bounding Volume Heirarchy (Quadtree)",description:"The Quadtree is also reffered to as a Kd-Tree is a case of spacial partitioning optimization, allowing large intersection tests to be done with consideration only towards the local objects. USAGE: Use the mouse to check for intersection with objects, which will be highlighted.",algorithm:function(e){var t,n;function r(e,t){this.x=e,this.y=t}function a(e,t,n,r){var a=this;this.x=e,this.y=t,this.w=n,this.h=r,this.contains=function(e){return e.x>=a.x-a.w&&e.x<=a.x+a.w&&e.y>=a.y-a.h&&e.y<=a.y+a.h},this.intersects=function(e){return!(e.x-e.w>a.x+a.w||e.x+e.w<a.x-a.w||e.y-e.h>a.y+a.h||e.y+e.h<a.y-a.w)}}function i(t,n){var r=this;this.boundary=t,this.capacity=n,this.points=[],this.divided=!1,this.insert=function(e){return!!r.boundary.contains(e)&&(r.points.length<r.capacity?(r.points.push(e),!0):(r.divided||r.subdivide(),!!r.topLeft.insert(e)||(!!r.topRight.insert(e)||(!!r.botLeft.insert(e)||(!!r.botRight.insert(e)||void 0)))))},this.subdivide=function(){var e=r.boundary.x,t=r.boundary.y,n=r.boundary.w,o=r.boundary.h,s=new a(e+n/2,t+o/2,n/2,o/2);r.topRight=new i(s,r.capacity);var c=new a(e+n/2,t-o/2,n/2,o/2);r.topLeft=new i(c,r.capacity);var l=new a(e-n/2,t+o/2,n/2,o/2);r.botRight=new i(l,r.capacity);var u=new a(e-n/2,t-o/2,n/2,o/2);r.botLeft=new i(u,r.capacity),r.divided=!0},this.query=function(e,t){if(r.boundary.intersects(e)){var n=!0,a=!1,i=void 0;try{for(var o,s=r.points[Symbol.iterator]();!(n=(o=s.next()).done);n=!0){var c=o.value;e.contains(c)&&t.push(c)}}catch(l){a=!0,i=l}finally{try{n||null==s.return||s.return()}finally{if(a)throw i}}return r.divided&&(r.topLeft.query(e,t),r.topRight.query(e,t),r.botLeft.query(e,t),r.botRight.query(e,t)),t}},this.show=function(){e.stroke(255),e.strokeWeight(1),e.rectMode(e.CENTER),e.noFill(),e.rect(r.boundary.x,r.boundary.y,2*r.boundary.w,2*r.boundary.h),r.divided&&(r.topLeft.show(),r.topRight.show(),r.botLeft.show(),r.botRight.show());var t=!0,n=!1,a=void 0;try{for(var i,o=r.points[Symbol.iterator]();!(t=(i=o.next()).done);t=!0){var s=i.value;e.strokeWeight(2),e.point(s.x,s.y)}}catch(c){n=!0,a=c}finally{try{t||null==o.return||o.return()}finally{if(n)throw a}}}}e.setup=function(){e.createCanvas(600,400),t=new a(300,200,300,200),n=new i(t,4);for(var o=0;o<300;o++){var s=new r(e.randomGaussian(300,100),e.randomGaussian(200,400/6));n.insert(s)}},e.draw=function(){e.background(0),e.stroke(0,255,0),e.rectMode(e.CENTER);var t=new a(e.mouseX,e.mouseY,107,74);e.rect(t.x,t.y,2*t.w,2*t.h);var r=new Array;n.query(t,r);for(var i=0,o=r;i<o.length;i++){var s=o[i];e.strokeWeight(8),e.point(s.x,s.y)}n.show()}}}],q={algo:"none",title:"none",description:"none",algorithm:null},E=function(e){function t(){var e;return Object(s.a)(this,t),(e=Object(l.a)(this,Object(u.a)(t).call(this))).onAlgoChange=function(t){e.setState({algo:t},(function(){j.forEach((function(t,n,r){e.state.algo===t.name&&e.setState({title:t.title,description:t.description,algorithm:t.algorithm})})),console.log(e.state)}))},e.state=q,e}return Object(h.a)(t,e),Object(c.a)(t,[{key:"render",value:function(){return a.a.createElement("div",{className:"App"},a.a.createElement("div",{className:"backgroundParticles"},a.a.createElement(f.a,{canvasClassName:"particles",params:S}),a.a.createElement("div",{className:"backgroundParticles"},"none"===this.state.algo?a.a.createElement("div",null,a.a.createElement(m,null),a.a.createElement(b,{onAlgoChange:this.onAlgoChange})):a.a.createElement("div",null,a.a.createElement(g,{title:this.state.title,description:this.state.description,onAlgoChange:this.onAlgoChange}),a.a.createElement("div",{className:"flex justify-center"},a.a.createElement(p.a,{sketch:this.state.algorithm}))))))}}]),t}(a.a.Component);Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));n(21);o.a.render(a.a.createElement(E,null),document.getElementById("root")),"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((function(e){e.unregister()}))}},[[12,1,2]]]);
//# sourceMappingURL=main.bc628df6.chunk.js.map