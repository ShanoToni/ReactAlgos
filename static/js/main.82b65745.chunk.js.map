{"version":3,"sources":["Components/splash.js","Components/list.js","Components/AlgoSpalash.js","App.js","SortAlgos/bubble.js","SortAlgos/selection.js","SortAlgos/quick.js","SearchAlgos/bfs.js","serviceWorker.js","index.js"],"names":["Splash","class","List","onAlgoChange","className","onClick","AlgoSplash","title","description","particlesOptions","particles","number","value","density","enable","value_area","line_linked","shadow","color","blur","algoData","name","algorithm","p","lastIdx","selected","values","swap","arr","idx1","idx2","a","async","sleep","temp","setup","createCanvas","i","Math","random","length","swapped","bubbleSort","draw","background","fill","rect","ms","Promise","resolve","setTimeout","firstUnsortedIdx","selectedItemIdx","comparingIdx","j","selectionSort","states","partition","start","end","pivotIndex","pivotValue","quickSort","index","all","w","h","chance","cols","rows","grid","Array","Square","this","connectedSqures","blocked","visited","inQ","found","show","stroke","addConnections","push","createBlocks","queue","node","shift","BFS","initState","algo","App","newAlgo","setState","forEach","idx","state","console","log","canvasClassName","params","sketch","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82b65745.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Splash() {\r\n    return(\r\n        <header class=\"sans-serif\">\r\n        <div class=\"cover bg-left bg-center-l\" >\r\n          <div class=\" pb5 pb6-m pb5-l\">\r\n            <nav class=\"dt w-100 mw8 center\"> \r\n              <div class=\"dtc v-mid tr pa3\">\r\n              </div>\r\n            </nav> \r\n              <div class=\"dtc w2 v-mid pa3\">\r\n                \r\n              </div>\r\n            <div class=\"tc-l mt4 mt5-m mt6-l ph3\">\r\n              <h1 class=\"f1 f1-l fw3 black mb0 lh-title\">Algorithm Visualization</h1>\r\n              <h2 class=\"fw1 f3 black mt3 mb2\">Showcasing algorithms by animating their work. Choose one and get started!</h2>\r\n              \r\n            </div>\r\n          </div>\r\n        </div> \r\n      </header>\r\n    );\r\n}\r\n\r\nexport default Splash;","import React from \"react\";\r\n\r\nfunction List({onAlgoChange}) {\r\n    return (\r\n        <div >\r\n            <div class=\"mw9 center ph3-ns\">\r\n                <div class=\"cf ph2-ns\">\r\n                    <div class=\"fl w-100 w-third-ns \">\r\n                        <h1 className=\"f4 bold center mw5\">Sorting</h1>\r\n                        <ul className=\"list pl0 ml0 center mw5 ba b--light-silver br3\">\r\n                            <li onClick={()=>onAlgoChange(\"bubble\")} className=\"ph3 pv2 bb b--light-silver pointer hover-white \">BubbleSort</li>\r\n                            <li onClick={()=>onAlgoChange(\"selection\")} className=\"ph3 pv2 bb b--light-silver pointer hover-white \">SelectionSort</li>\r\n                            <li onClick={()=>onAlgoChange(\"quick\")} className=\"ph3 pv2 bb b--light-silver pointer hover-white \">QuickSort</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"fl w-100 w-third-ns\">\r\n                        <h1 className=\"f4 bold center mw5\">Searching</h1>\r\n                        <ul className=\"list pl0 ml0 center mw5 ba b--light-silver br3\">\r\n                        <li onClick={()=>onAlgoChange(\"bfs\")} className=\"ph3 pv2 bb b--light-silver pointer hover-white \">Breadth First Search</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"fl w-100 w-third-ns \">\r\n                        <h1 className=\"f4 bold center mw5\">Other</h1>\r\n                        <ul className=\"list pl0 ml0 center mw5 ba b--light-silver br3\">\r\n                        <li className=\"ph3 pv2 bb b--light-silver pointer hover-white \">BubbleSort</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import React from \"react\";\r\n\r\nfunction AlgoSplash({onAlgoChange, title, description}) {\r\n    return(\r\n        <header class=\"sans-serif\">\r\n        <div class=\"cover bg-left bg-center-l\" >\r\n          <div class=\" pb5 pb6-m pb5-l\">\r\n            <nav class=\"dt w-100 mw8 center\"> \r\n              <div class=\"dtc v-mid tr pa3\">\r\n              </div>\r\n            </nav> \r\n              <div class=\"dtc w2 v-mid pa3\">\r\n                \r\n              </div>\r\n            <div class=\"tc-l mt4 mt5-m mt6-l ph3\">\r\n              <h1 class=\"f1 f1-l fw3 black mb0 lh-title\">{title}</h1>\r\n              <div className=\"flex justify-center mh6\">\r\n                <h2 class=\"fw1 f3 black mt3 mb2 lh-copy\">{description}</h2>\r\n              </div>\r\n              <div className=\"flex justify-center\">\r\n                <ul className=\"list pl0 ml0 mw5 ba b--light-silver br3\">\r\n                  <li onClick={()=>onAlgoChange(\"none\")} className=\"ph4 pv3 bb b--light-silver pointer hover-white \">Home</li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div> \r\n      </header>\r\n    );\r\n}\r\n\r\nexport default AlgoSplash;","import React from 'react';\nimport Particles from 'react-particles-js';\nimport P5Wrapper from 'react-p5-wrapper';\n\nimport Splash from './Components/splash';\nimport List from './Components/list'\nimport AlgoSplash from \"./Components/AlgoSpalash\"\n\nimport './App.css';\n\nimport bubble from \"./SortAlgos/bubble\"\nimport selection from \"./SortAlgos/selection\"\nimport quick from \"./SortAlgos/quick\"\nimport bfs from \"./SearchAlgos/bfs\"\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 800\n      },\n      line_linked: {\n        shadow: {\n          enable: true,\n          color: \"#3CA9D1\",\n          blur: 5\n        }\n      }\n    }\n  },\n \n};\n\nconst algoData = [\n    {\n      name : \"bubble\",\n      title : \"Bubble Sort\",\n      description : \"Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in the wrong order. It requires an O(n*n) time complexity on average while also requiring a large number of memory operations (swaps). Bubble sort is considered the simplest and most inefficient sorting algorithm\",\n      algorithm: bubble\n    },\n    {\n      name : \"selection\",\n      title : \"Selection Sort\",\n      description : \"The selection sort algorithm sorts an array by repeatedly finding the minimum element from unsorted part and putting it at the beginning. While having the same time complexity as Bubble Sort O(n*n) it is a superior algorithm due to the decrease of swaps occuring in the list.\",\n      algorithm :selection\n    },\n    {\n      name : \"quick\",\n      title : \"Quick Sort\",\n      description : \"QuickSort is a Divide and Conquer algorithm. It picks an element as pivot and partitions the given array around the picked pivot. The key process in quickSort is partition(). Target of partitions is, given an array and an element x of array as pivot, put x at its correct position in sorted array and put all smaller elements before it, and put all greater elements after it.\",\n      algorithm :quick\n    },\n    {\n      name : \"bfs\",\n      title : \"Breadth First Search\",\n      description : \"Something something something... Darkside\",\n      algorithm :bfs\n    },\n];\n  \n\n\nconst initState ={\n    algo: \"none\",\n    title: \"none\",\n    description: \"none\",\n    algorithm: null\n};\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = (initState);\n  }\n\n  onAlgoChange = (newAlgo) =>{\n    this.setState({algo : newAlgo,}, ()=>{  \n      algoData.forEach((algo,idx,arr) =>{\n        if(this.state.algo === algo.name)\n        {\n          this.setState({\n            title:algo.title, \n            description: algo.description,\n            algorithm: algo.algorithm\n          });\n        }\n      })\n      console.log(this.state);\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n      <div className=\"backgroundParticles\">\n        <Particles  canvasClassName=\"particles\" params={particlesOptions} />\n      <div className=\"backgroundParticles\">\n        { this.state.algo === \"none\"\n         ? <div>\n            <Splash/>\n            <List onAlgoChange = {this.onAlgoChange}/>\n           </div>\n         : <div>\n            <AlgoSplash title={this.state.title} description={this.state.description} onAlgoChange = {this.onAlgoChange}/>\n            <div className=\"flex justify-center\">\n              <P5Wrapper sketch={this.state.algorithm} />\n            </div>\n          </div>\n        }\n          </div></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default function bubble (p) {\r\n    const height = 400;\r\n    const width = 600;\r\n    \r\n    let selected = [2];\r\n    let values = [60];\r\n    let lastIdx;\r\n    p.setup = function () {\r\n      p.createCanvas(width, height);\r\n      \r\n      for(let i = 0; i < 60; i++){\r\n          values[i] = Math.random()*height;\r\n      }\r\n      \r\n\r\n      //sorting magic\r\n      bubbleSort();\r\n    };\r\n    \r\n    async function bubbleSort(){\r\n        let swapped;\r\n        lastIdx = values.length-1;\r\n        do {\r\n            swapped = false;\r\n            for(let i=0; i< lastIdx;i++){\r\n                if(values[i]>values[i+1]){\r\n                   await swap(values, i, i+1);\r\n                    selected[0]=i;\r\n                    selected[1]=i+1;\r\n                    swapped = true;\r\n                }\r\n            }\r\n            lastIdx-=1;\r\n        }\r\n        while (swapped);\r\n    }\r\n    \r\n    \r\n    p.draw = function () {\r\n        p.background(100);\r\n        for(let i = 0; i< values.length; i++)\r\n        {\r\n            if(i>lastIdx){\r\n                p.fill(255,0,0);\r\n            } else {\r\n                p.fill(255);\r\n            }\r\n            \r\n            if (i === selected[0] || i === selected[1])\r\n            {\r\n                p.fill(0,255,0);\r\n            }\r\n            p.rect(i*10 , height, 10, -values[i] );\r\n        }\r\n    };\r\n    \r\n    async function swap (arr, idx1, idx2){\r\n        await sleep(25);\r\n         let temp = arr[idx1];\r\n         arr[idx1] = arr[idx2];\r\n         arr[idx2] = temp;\r\n     }\r\n\r\n    let sleep = (ms)=> {\r\n        return new Promise(resolve => setTimeout(resolve,ms));\r\n    }\r\n  };","export default function selection (p) {\r\n    const height = 400;\r\n    const width = 600;\r\n    \r\n    \r\n    let values = [60];\r\n    let firstUnsortedIdx;\r\n    let selectedItemIdx;\r\n    let comparingIdx;\r\n\r\n    p.setup = function () {\r\n      p.createCanvas(width, height);\r\n      \r\n      for(let i = 0; i < 60; i++){\r\n          values[i] = Math.random()*height;\r\n      }\r\n      \r\n\r\n      //sorting magic\r\n      selectionSort();\r\n    };\r\n    \r\n    async function selectionSort(){\r\n        for(let j = 0; j< values.length; j++){\r\n            firstUnsortedIdx = j;\r\n            selectedItemIdx = j;\r\n            for(let i = firstUnsortedIdx; i < values.length; i++)\r\n            {\r\n                comparingIdx = i;\r\n                if(values[selectedItemIdx] > values[i])\r\n                {\r\n                    selectedItemIdx = i;\r\n                }\r\n                await sleep(25);\r\n            }\r\n            await swap(values, selectedItemIdx, firstUnsortedIdx);\r\n        }\r\n       \r\n    }\r\n\r\n\r\n    p.draw = function () {\r\n        p.background(100);\r\n        for(let i = 0; i< values.length; i++)\r\n        {\r\n            if(i< firstUnsortedIdx){\r\n                p.fill(255,0,0);\r\n            } else {\r\n                p.fill(255);\r\n            }\r\n\r\n            if(i === selectedItemIdx) {\r\n                p.fill(255,165,0);\r\n            }\r\n            if(i === comparingIdx){\r\n                p.fill(0,255,0);\r\n            }\r\n            p.rect(i*10 , height, 10, -values[i] );\r\n        }\r\n    };\r\n\r\n   let swap = (arr, idx1, idx2) =>{\r\n        let temp = arr[idx1];\r\n        arr[idx1] = arr[idx2];\r\n        arr[idx2] = temp;\r\n    }\r\n\r\n    let sleep = (ms)=> {\r\n        return new Promise(resolve => setTimeout(resolve,ms));\r\n    }\r\n  };","export default function selection (p) {\r\n    const height = 400;\r\n    const width = 600;\r\n    \r\n    \r\n    let values = [60];\r\n    let states = [];\r\n    p.setup = function () {\r\n      p.createCanvas(width, height);\r\n      \r\n      for(let i = 0; i < 60; i++){\r\n          values[i] = Math.random()*height;\r\n          states[i] = -1;\r\n      }\r\n      \r\n\r\n      //sorting magic\r\n      quickSort(values,0, values.length-1);\r\n    };\r\n    \r\n    async function quickSort(arr, start, end){\r\n        if(start>=end){\r\n            return;\r\n        }\r\n        let index = await partition(arr,start,end);\r\n        states[index] = -1;\r\n        await Promise.all([quickSort(arr, start, index-1), quickSort(arr, index+1, end)]);\r\n        \r\n    }\r\n\r\n    async function partition(arr, start, end){\r\n\r\n        for(let i = start; i<=end; i++){\r\n            if(states[i] != 0)\r\n            {\r\n                states[i] = 1;\r\n            }\r\n        }\r\n\r\n        let pivotIndex = start;\r\n        let pivotValue = arr[end];\r\n        states[pivotIndex] = 0;\r\n        for(let i=start; i< end; i++){\r\n            if(arr[i]<pivotValue){\r\n                await swap(arr, i, pivotIndex);\r\n                states[pivotIndex] = -1;\r\n                pivotIndex++;\r\n                states[pivotIndex] = 0;\r\n            }\r\n        }\r\n        await swap(arr,pivotIndex, end);\r\n\r\n        for(let i = start; i<=end; i++){\r\n            if(states[i] != 0)\r\n            {\r\n                states[i] = -1;\r\n            }\r\n        }\r\n\r\n        return pivotIndex;\r\n    }\r\n\r\n\r\n    p.draw = function () {\r\n        p.background(100);\r\n        for(let i = 0; i< values.length; i++)\r\n        {\r\n            if(states[i] === 0){\r\n                p.fill(255,0,0);\r\n            } else if(states[i] === 1){\r\n                p.fill(0,0,255);\r\n            }else {\r\n                p.fill(255);\r\n            }\r\n            p.rect(i*10 , height, 10, -values[i] );\r\n        }\r\n    };\r\n\r\n   async function swap (arr, idx1, idx2){\r\n       await sleep(25);\r\n        let temp = arr[idx1];\r\n        arr[idx1] = arr[idx2];\r\n        arr[idx2] = temp;\r\n    }\r\n\r\n    let sleep = (ms)=> {\r\n        return new Promise(resolve => setTimeout(resolve,ms));\r\n    }\r\n  };","export default function bfs (p) {\r\n    const height = 400;\r\n    const width = 600;\r\n    \r\n    let chance = 0.2;\r\n\r\n    let cols = 30;\r\n    let rows = 20;\r\n    \r\n    let w,h;\r\n\r\n    let grid = new Array(cols);\r\n\r\n    p.setup = function () {\r\n      p.createCanvas(width, height);\r\n      \r\n        w = width / cols;\r\n        h = height / rows;\r\n\r\n      for(let i = 0; i< cols; i++){\r\n          grid[i] = new Array(rows);\r\n      }\r\n\r\n      for(let i = 0; i< cols; i++){\r\n          for(let j = 0; j < rows; j++){\r\n            grid[i][j] = new Square(i,j);\r\n        }\r\n    }\r\n    for(let i = 0; i< cols; i++){\r\n        for(let j = 0; j < rows; j++){\r\n            grid[i][j].addConnections();\r\n        }\r\n    }\r\n    \r\n    createBlocks();\r\n\r\n    BFS();\r\n};      \r\n    function Square(i,j){\r\n        this.i = i\r\n        this.j = j;\r\n        this.connectedSqures = [];\r\n        this.blocked = false;\r\n        this.visited = false;\r\n        this.inQ = false;\r\n        this.found = false;\r\n\r\n        this.show = ()=>{\r\n            if(this.blocked){\r\n                p.fill(0);\r\n            }else if(this.found){\r\n                p.fill(0,255,0);\r\n            } else if(this.inQ && !this.visited){\r\n                p.fill(0,0,255);\r\n            } else if(this.visited){\r\n                p.fill(255,0,0);\r\n            }else {\r\n                p.fill(255);\r\n            }\r\n            p.stroke(0)\r\n            p.rect(this.i*w, this.j*h,w,h)\r\n        }\r\n\r\n        this.addConnections = ()=>{\r\n            if(this.i < cols-1){\r\n                this.connectedSqures.push(grid[this.i+1][this.j]);\r\n            }\r\n            if(this.i > 0){\r\n                this.connectedSqures.push(grid[this.i-1][this.j]);\r\n            }\r\n            if(this.j>0){\r\n                this.connectedSqures.push(grid[this.i][this.j-1]);\r\n            }\r\n            if(this.j< rows-1){\r\n                this.connectedSqures.push(grid[this.i][this.j+1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    function createBlocks(){\r\n        for(let i=0; i<cols; i++){\r\n            for(let j=0; j< rows; j++){\r\n                if(i !== 0 && j !==0 ||  i !== cols-1 && j !==rows-1)\r\n                {\r\n                    if(Math.random()<chance){\r\n                        grid[i][j].blocked = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n   async function BFS(){\r\n        let queue = [];\r\n\r\n        queue.push(grid[0][0]);\r\n        grid[0][0].inQ = true;\r\n\r\n        while(queue.length !== 0){\r\n            for(let i =0; i<queue.length; i++){\r\n                let node = queue.shift();\r\n                node.visited = true;\r\n                if(node === grid[cols-1][rows-1]){\r\n                    node.found= true;;\r\n                }\r\n                for(let j = 0; j < node.connectedSqures.length; j++){\r\n                    if(node.connectedSqures[j]) {\r\n                        await sleep(1);\r\n                        if(!node.connectedSqures[j].visited && !node.connectedSqures[j].inQ && !node.connectedSqures[j].blocked){\r\n                            queue.push(node.connectedSqures[j]);\r\n                            node.connectedSqures[j].inQ = true;\r\n                        }\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    \r\n\r\n    p.draw = function () {\r\n        p.background(100);\r\n\r\n        for(let i = 0; i< cols; i++){\r\n            for(let j = 0; j < rows; j++){\r\n              grid[i][j].show();\r\n            }\r\n          }\r\n        \r\n    };\r\n\r\n \r\n\r\n    let sleep = (ms)=> {\r\n        return new Promise(resolve => setTimeout(resolve,ms));\r\n    }\r\n  };","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}