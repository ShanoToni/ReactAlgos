{"version":3,"sources":["Components/splash.js","Components/list.js","SortAlgos/bubble.js","SortAlgos/bubbleSplash.js","App.js","serviceWorker.js","index.js"],"names":["Splash","class","src","alt","List","onAlgoChange","className","onClick","bubble","p","lastIdx","selected","values","setup","createCanvas","i","Math","random","a","async","length","swapped","sleep","swap","bubbleSort","draw","background","fill","rect","arr","idx1","idx2","temp","ms","Promise","resolve","setTimeout","BubbleSplash","particlesOptions","particles","number","value","density","enable","value_area","line_linked","shadow","color","blur","initState","algo","App","newAlgo","setState","state","canvasClassName","params","this","sketch","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.92f47450.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Splash() {\r\n    return(\r\n        <header class=\"sans-serif\">\r\n        <div class=\"cover bg-left bg-center-l\" >\r\n          <div class=\" pb5 pb6-m pb5-l\">\r\n            <nav class=\"dt w-100 mw8 center\"> \r\n              <div class=\"dtc v-mid tr pa3\">\r\n              </div>\r\n            </nav> \r\n              <div class=\"dtc w2 v-mid pa3\">\r\n                <a  class=\"dib ml6 w4 h4 grow-large border-box\">\r\n                <img src=\"https://i.imgur.com/o2dmEq0.png\" class=\"mw-100\" alt=\"night sky over water\"></img>\r\n                </a>\r\n              </div>\r\n            <div class=\"tc-l mt4 mt5-m mt6-l ph3\">\r\n              <h1 class=\"f1 f1-l fw3 black mb0 lh-title\">Algorithm Visualization</h1>\r\n              <h2 class=\"fw1 f3 black mt3 mb2\">Showcasing algorithms by animating their work. Choose one and get started!</h2>\r\n              \r\n            </div>\r\n          </div>\r\n        </div> \r\n      </header>\r\n    );\r\n}\r\n\r\nexport default Splash;","import React from \"react\";\r\n\r\nfunction List({onAlgoChange}) {\r\n    return (\r\n        <div >\r\n            <div class=\"mw9 center ph3-ns\">\r\n                <div class=\"cf ph2-ns\">\r\n                    <div class=\"fl w-100 w-third-ns \">\r\n                        <h1 className=\"f4 bold center mw5\">Sorting</h1>\r\n                        <ul className=\"list pl0 ml0 center mw5 ba b--light-silver br3\">\r\n                            <li onClick={()=>onAlgoChange(\"bubble\")} className=\"ph3 pv2 bb b--light-silver pointer hover-white \">BubbleSort</li>\r\n                            <li className=\"ph3 pv2 bb b--light-silver pointer hover-white \">BubbleSort</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"fl w-100 w-third-ns\">\r\n                        <h1 className=\"f4 bold center mw5\">Searching</h1>\r\n                        <ul className=\"list pl0 ml0 center mw5 ba b--light-silver br3\">\r\n                        <li className=\"ph3 pv2 bb b--light-silver pointer hover-white \">BubbleSort</li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"fl w-100 w-third-ns \">\r\n                        <h1 className=\"f4 bold center mw5\">Other</h1>\r\n                        <ul className=\"list pl0 ml0 center mw5 ba b--light-silver br3\">\r\n                        <li className=\"ph3 pv2 bb b--light-silver pointer hover-white \">BubbleSort</li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","export default function bubble (p) {\r\n    const height = 400;\r\n    const width = 600;\r\n    \r\n    let selected = [2];\r\n    let values = [60];\r\n    let lastIdx;\r\n    p.setup = function () {\r\n      p.createCanvas(width, height);\r\n      \r\n      for(let i = 0; i < 60; i++){\r\n          values[i] = Math.random()*height;\r\n      }\r\n      \r\n\r\n      //sorting magic\r\n      bubbleSort();\r\n    };\r\n    \r\n    async function bubbleSort(){\r\n        let swapped;\r\n        lastIdx = values.length-1;\r\n        do {\r\n            swapped = false;\r\n            for(let i=0; i< lastIdx;i++){\r\n               await sleep(50);\r\n                if(values[i]>values[i+1]){\r\n                    swap(values, i, i+1);\r\n                    selected[0]=i;\r\n                    selected[1]=i+1;\r\n                    swapped = true;\r\n                }\r\n            }\r\n            lastIdx-=1;\r\n        }\r\n        while (swapped);\r\n    }\r\n\r\n\r\n    p.draw = function () {\r\n        p.background(100);\r\n        for(let i = 0; i< values.length; i++)\r\n        {\r\n            if(i>lastIdx){\r\n                p.fill(255,0,0);\r\n            } else {\r\n                p.fill(255);\r\n            }\r\n\r\n            if (i == selected[0] || i == selected[1])\r\n            {\r\n                p.fill(0,255,0);\r\n            }\r\n            p.rect(i*10 , height, 10, -values[i] );\r\n        }\r\n    };\r\n\r\n   let swap = (arr, idx1, idx2) =>{\r\n        let temp = arr[idx1];\r\n        arr[idx1] = arr[idx2];\r\n        arr[idx2] = temp;\r\n    }\r\n\r\n    let sleep = (ms)=> {\r\n        return new Promise(resolve => setTimeout(resolve,ms));\r\n    }\r\n  };","import React from \"react\";\r\n\r\nfunction BubbleSplash({onAlgoChange}) {\r\n    return(\r\n        <header class=\"sans-serif\">\r\n        <div class=\"cover bg-left bg-center-l\" >\r\n          <div class=\" pb5 pb6-m pb5-l\">\r\n            <nav class=\"dt w-100 mw8 center\"> \r\n              <div class=\"dtc v-mid tr pa3\">\r\n              </div>\r\n            </nav> \r\n              <div class=\"dtc w2 v-mid pa3\">\r\n                <a  class=\"dib ml6 w4 h4 grow-large border-box\">\r\n                <img src=\"https://i.imgur.com/o2dmEq0.png\" class=\"mw-100\" alt=\"night sky over water\"></img>\r\n                </a>\r\n              </div>\r\n            <div class=\"tc-l mt4 mt5-m mt6-l ph3\">\r\n              <h1 class=\"f1 f1-l fw3 black mb0 lh-title\">Bubble Sort</h1>\r\n              <h2 class=\"fw1 f3 black mt3 mb2\">Description LATER!</h2>\r\n              <ul className=\"list pl0 ml0 mw5 ba b--light-silver br3\">\r\n                <li onClick={()=>onAlgoChange(\"none\")} className=\"ph3 pv2 bb b--light-silver pointer hover-white \">Home</li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div> \r\n      </header>\r\n    );\r\n}\r\n\r\nexport default BubbleSplash;","import React from 'react';\nimport Particles from 'react-particles-js';\nimport P5Wrapper from 'react-p5-wrapper';\n\nimport Splash from './Components/splash';\nimport List from './Components/list'\n\nimport './App.css';\n\nimport bubble from \"./SortAlgos/bubble\"\nimport BubbleSplash from \"./SortAlgos/bubbleSplash\"\n\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 800\n      },\n      line_linked: {\n        shadow: {\n          enable: true,\n          color: \"#3CA9D1\",\n          blur: 5\n        }\n      }\n    }\n  },\n \n};\n\nconst initState ={\n    algo: \"none\"\n};\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state = (initState);\n  }\n\n  onAlgoChange = (newAlgo) =>{\n    this.setState({algo : newAlgo })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n      <div className=\"backgroundParticles\">\n        <Particles  canvasClassName=\"particles\" params={particlesOptions} />\n      <div className=\"backgroundParticles\">\n        { this.state.algo === \"none\"\n         ? <div>\n            <Splash/>\n            <List onAlgoChange = {this.onAlgoChange}/>\n           </div>\n         : this.state.algo === \"bubble\"\n          ? <div>\n              <BubbleSplash onAlgoChange = {this.onAlgoChange}/>\n              <div className=\"flex justify-center\">\n                <P5Wrapper sketch={bubble} />\n              </div>\n            </div>\n          \n          : <p>Something</p>\n        }\n          </div></div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}